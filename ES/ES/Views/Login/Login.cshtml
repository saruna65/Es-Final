@model ES.Models.Login

@{
    Layout = null;
}


<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/svg" href="/assetsnew/iresha.svg">
    <title>Iresha Food Products</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <style>

        .svg-container {
            background-image: url('/assetsnew/iresha.svg');
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            height: 200px;
            width: 200px;
            margin: 0 auto;
        }

        .back {
            background-image: url('/assetsnew/spices.jpg');
            background-size: cover;
            background-position: center;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: auto;
        }

        .card {
            box-shadow: 0px 0px 27px 1px rgba(150, 150, 150, 0.11);
            background-color: rgba(255, 255, 255, 0.0);
            margin-top: 100px;
        }
    </style>
</head>
<body class="back">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
    <div class="container my-5">

        <div class="card mx-auto" style="width: 18rem;">
            <div class="svg-container"></div>
            <div class="card-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <br>

                        @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control", @type = "text", style = "margin-top: -50px;", placeholder = "Enter username" } })
                        @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                    </div>
                    <br>
                    <div class="input-group mb-3">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <br>
                    <button type="submit" class="btn btn-danger mx-auto d-block">Login</button>
                }
                <br />
            </div>
        </div>
    </div>
    <script>
        const passwordInput = document.querySelector('input[type="password"]');
        const togglePasswordButton = document.querySelector('#button-addon2');

        togglePasswordButton.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            togglePasswordButton.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
</body>
</html>

